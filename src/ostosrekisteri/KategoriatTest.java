package ostosrekisteri;
// Generated by ComTest BEGIN
import java.io.File;
import java.util.*;
import ostosrekisteri.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2016.08.03 13:50:51 // Generated by ComTest
 *
 */
public class KategoriatTest {



  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta81 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta81() throws SailoException {    // Kategoriat: 81
    Kategoriat kattesti = new Kategoriat(); 
    Kategoria testi1 = new Kategoria(), testi2 = new Kategoria(), testi3 = new Kategoria(), testi4 = new Kategoria(); 
    testi1.jeesiKategoria(1); 
    testi2.jeesiKategoria(2); 
    testi3.jeesiKategoria(3); 
    testi4.jeesiKategoria(4); 
    String tiedNimi = "testikategoriat"; 
    File katfile = new File(tiedNimi+".dat"); 
    katfile.delete(); 
    try {
    kattesti.lueTiedostosta(tiedNimi); 
    fail("Kategoriat: 94 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    kattesti.lisaa(testi1); 
    kattesti.lisaa(testi2); 
    kattesti.lisaa(testi3); 
    kattesti.lisaa(testi4); 
    kattesti.tallenna(); 
    Kategoriat kattesti2 = new Kategoriat(); 
    kattesti2.lueTiedostosta(tiedNimi); 
    Iterator<Kategoria> i = kattesti2.iterator(); 
    assertEquals("From: Kategoriat line: 103", testi1.toString(), i.next().toString()); 
    assertEquals("From: Kategoriat line: 104", testi2.toString(), i.next().toString()); 
    assertEquals("From: Kategoriat line: 105", testi3.toString(), i.next().toString()); 
    assertEquals("From: Kategoriat line: 106", testi4.toString(), i.next().toString()); 
    assertEquals("From: Kategoriat line: 107", false, i.hasNext()); 
    kattesti2.lisaa(testi1); 
    kattesti2.tallenna(); 
    assertEquals("From: Kategoriat line: 110", true, katfile.delete()); 
    File bakup = new File(tiedNimi+".bak"); 
    assertEquals("From: Kategoriat line: 112", true, bakup.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator232 */
  @Test
  public void testIterator232() {    // Kategoriat: 232
    Kategoriat kategoriat = new Kategoriat(); 
    Kategoria kategoria1 = new Kategoria(1); kategoriat.lisaa(kategoria1); 
    Kategoria kategoria2 = new Kategoria(2); kategoriat.lisaa(kategoria2); 
    Kategoria kategoria3 = new Kategoria(1); kategoriat.lisaa(kategoria3); 
    Kategoria kategoria4 = new Kategoria(2); kategoriat.lisaa(kategoria4); 
    Kategoria kategoria5 = new Kategoria(2); kategoriat.lisaa(kategoria5); 
    Iterator<Kategoria>iteraattori = kategoriat.iterator(); 
    assertEquals("From: Kategoriat line: 245", kategoria1, iteraattori.next()); 
    assertEquals("From: Kategoriat line: 246", kategoria2, iteraattori.next()); 
    assertEquals("From: Kategoriat line: 247", kategoria3, iteraattori.next()); 
    assertEquals("From: Kategoriat line: 248", kategoria4, iteraattori.next()); 
    assertEquals("From: Kategoriat line: 249", kategoria5, iteraattori.next()); 
    assertEquals("From: Kategoriat line: 250", false, iteraattori.hasNext()); 
    try {
    assertEquals("From: Kategoriat line: 251", kategoria1, iteraattori.next());
    fail("Kategoriat: 251 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKategoriat266 */
  @Test
  public void testAnnaKategoriat266() {    // Kategoriat: 266
    Kategoriat kategoriat = new Kategoriat(); 
    Kategoria testi1 = new Kategoria(1); kategoriat.lisaa(testi1); 
    Kategoria testi2 = new Kategoria(5); kategoriat.lisaa(testi2); 
    Kategoria testi3 = new Kategoria(1); kategoriat.lisaa(testi3); 
    Kategoria testi4 = new Kategoria(4); kategoriat.lisaa(testi4); 
    Kategoria testi5 = new Kategoria(4); kategoriat.lisaa(testi5); 
    Kategoria testi6 = new Kategoria(4); kategoriat.lisaa(testi6); 
    List<Kategoria> loydetyt = kategoriat.annaKategoriat(2); 
    assertEquals("From: Kategoriat line: 278", 0, loydetyt.size()); 
    loydetyt = kategoriat.annaKategoriat(1); 
    assertEquals("From: Kategoriat line: 280", 2, loydetyt.size()); 
    assertEquals("From: Kategoriat line: 281", true, loydetyt.get(0) == testi1); 
    assertEquals("From: Kategoriat line: 282", true, loydetyt.get(1) == testi3); 
    loydetyt = kategoriat.annaKategoriat(4); 
    assertEquals("From: Kategoriat line: 284", 3, loydetyt.size()); 
    assertEquals("From: Kategoriat line: 285", true, loydetyt.get(0) == testi4); 
    assertEquals("From: Kategoriat line: 286", true, loydetyt.get(1) == testi5); 
    assertEquals("From: Kategoriat line: 287", true, loydetyt.get(2) == testi6); 
    loydetyt = kategoriat.annaKategoriat(5); 
    assertEquals("From: Kategoriat line: 289", 1, loydetyt.size()); 
    assertEquals("From: Kategoriat line: 290", true, loydetyt.get(0) == testi2); 
  } // Generated by ComTest END
}